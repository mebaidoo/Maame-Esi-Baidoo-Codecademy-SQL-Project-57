-- Investigating the dataset
SELECT title, score FROM hacker_news ORDER BY score DESC LIMIT 5;
-- Finding out if only a small percentage of the users contribute
SELECT SUM(score) FROM hacker_news;
SELECT user, SUM(score) FROM hacker_news GROUP BY user HAVING SUM(score) > 200;
SELECT (309 + 304 + 282 + 517) / 6366.0;
-- Finding the number of users who are rickrolling (tricking readers)
SELECT user, COUNT(*) FROM hacker_news WHERE url LIKE "%watch?v=dQw4w9WgXcQ" GROUP BY 1 ORDER BY 2 DESC;
-- Finding which sites feed hacker news and their number
SELECT CASE WHEN url LIKE "%github%" THEN "GitHub" WHEN url LIKE "%medium.com%" THEN "Medium" WHEN url LIKE "%nytimes.com%" THEN "New York Times" ELSE "Other" END AS "Source", COUNT(*) FROM hacker_news GROUP BY 1;
-- Finding the best time to post a story
SELECT timestamp FROM hacker_news LIMIT 10;
SELECT timestamp, strftime("%H", timestamp) FROM hacker_news GROUP BY 1 LIMIT 20;
SELECT strftime("%H", timestamp) AS "Hours", ROUND(AVG(score), 0) AS "Average Score", COUNT(*) AS "Number of Stories" FROM hacker_news WHERE timestamp IS NOT NULL GROUP BY 1 ORDER BY 1; 